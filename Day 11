// server.js
const express = require('express');
const app = express();
const PORT = 3000;

// Middleware
app.use(express.json());

// In-memory "database"
let students = [];
let nextId = 1;

// Routes

// GET all students
app.get('/students', (req, res) => {
  res.json(students);
});

// GET single student by ID
app.get('/students/:id', (req, res) => {
  const studentId = parseInt(req.params.id);
  const student = students.find(s => s.id === studentId);

  if (!student) {
    return res.status(404).json({ message: 'Student not found' });
  }

  res.json(student);
});

// POST create a new student
app.post('/students', (req, res) => {
  const { name, age, course } = req.body;

  if (!name || !age || !course) {
    return res.status(400).json({ message: 'Name, age, and course are required' });
  }

  const newStudent = {
    id: nextId++,
    name,
    age,
    course
  };

  students.push(newStudent);
  res.status(201).json(newStudent);
});

// PUT update a student
app.put('/students/:id', (req, res) => {
  const studentId = parseInt(req.params.id);
  const { name, age, course } = req.body;

  const student = students.find(s => s.id === studentId);
  if (!student) {
    return res.status(404).json({ message: 'Student not found' });
  }

  if (name) student.name = name;
  if (age) student.age = age;
  if (course) student.course = course;

  res.json(student);
});

// DELETE a student
app.delete('/students/:id', (req, res) => {
  const studentId = parseInt(req.params.id);
  const index = students.findIndex(s => s.id === studentId);

  if (index === -1) {
    return res.status(404).json({ message: 'Student not found' });
  }

  const deleted = students.splice(index, 1);
  res.json({ message: 'Student deleted', student: deleted[0] });
});

// Start the server
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
