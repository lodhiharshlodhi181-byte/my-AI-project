import React, { useState } from 'react';

export default function TodoApp() {
  const [tasks, setTasks] = useState([]);
  const [input, setInput] = useState('');

  // Add task
  const handleAddTask = (e) => {
    e.preventDefault();
    if (input.trim() === '') return;

    const newTask = {
      id: Date.now(),
      text: input,
      completed: false
    };

    setTasks([...tasks, newTask]);
    setInput('');
  };

  // Toggle complete
  const handleToggle = (id) => {
    const updatedTasks = tasks.map(task =>
      task.id === id ? { ...task, completed: !task.completed } : task
    );
    setTasks(updatedTasks);
  };

  // Delete task
  const handleDelete = (id) => {
    setTasks(tasks.filter(task => task.id !== id));
  };

  return (
    <div style={styles.container}>
      <h2>üìù To-Do List</h2>
      <form onSubmit={handleAddTask}>
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="Add new task"
          style={styles.input}
        />
        <button type="submit" style={styles.addBtn}>Add</button>
      </form>

      <ul style={styles.list}>
        {tasks.map((task) => (
          <li key={task.id} style={styles.listItem}>
            <input
              type="checkbox"
              checked={task.completed}
              onChange={() => handleToggle(task.id)}
            />
            <span style={{
              ...styles.taskText,
              textDecoration: task.completed ? 'line-through' : 'none'
            }}>
              {task.text}
            </span>
            <button onClick={() => handleDelete(task.id)} style={styles.deleteBtn}>‚ùå</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

// Simple inline styles
const styles = {
  container: {
    maxWidth: '400px',
    margin: '40px auto',
    padding: '20px',
    border: '1px solid #ccc',
    borderRadius: '8px',
    fontFamily: 'Arial, sans-serif'
  },
  input: {
    width: '70%',
    padding: '8px',
    marginRight: '8px'
  },
  addBtn: {
    padding: '8px 12px',
    cursor: 'pointer'
  },
  list: {
    listStyle: 'none',
    paddingLeft: '0',
    marginTop: '20px'
  },
  listItem: {
    display: 'flex',
    alignItems: 'center',
    marginBottom: '10px'
  },
  taskText: {
    flex: 1,
    marginLeft: '10px'
  },
  deleteBtn: {
    marginLeft: '10px',
    cursor: 'pointer'
  }
};
